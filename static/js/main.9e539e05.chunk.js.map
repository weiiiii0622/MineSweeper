{"version":3,"sources":["components/Cell.js","components/Modal.js","components/Dashboard.js","util/reveal.js","util/randomFixSeed.js","util/createBoard.js","components/Board.js","components/HomePage.js","containers/MineSweeper.js","App.js","index.js"],"names":["Cell","rowIdx","colIdx","detail","updateFlag","revealCell","cellStyle","background","revealed","value","mineCheckPattern","x","y","checkPattern","color","numColorCode","border","ID","toString","id","className","style","onClick","onContextMenu","e","flagged","num","Modal","restartGame","backToHome","win","useState","render","setRender","useEffect","setTimeout","opacity","Dashboard","remainFlagNum","gameOver","time","setTime","sTime","setSTime","interval","setInterval","clearInterval","dx","dy","randomFixSeed","require","seedrandom","randomNum","min","max","Math","floor","Board","boardSize","mineNum","board","setBoard","nonMineCount","setNonMineCount","mineLocations","setMineLocations","setGameOver","setRemainFlagNum","setWin","freshBoard","newBoard","subCol","push","mineCount","r","c","console","log","map","printBoard","createBoard","length","preventDefault","JSON","parse","stringify","newFlagNum","forEach","coord","ret","newNonMinesCount","visited","Array","fill","s","cur","shift","i","row","index","display","col","HomePage","startGameOnClick","mineNumOnChange","boardSizeOnChange","showPanel","setShowPanel","error","setError","type","onChange","target","step","defaultValue","MineSweeper","startGame","setStartGame","setMineNum","setBoardSize","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e539e05.chunk.js","sourcesContent":["/****************************************************************************\n  FileName      [ Cell.js ]\n  PackageName   [ src/components ]\n  Author        [ Cheng-Hua Lu ]\n  Synopsis      [ This file generates a single cell. ]\n  Copyright     [ 2022 10 ]\n****************************************************************************/\n\nimport \"./css/Cell.css\"\nimport React from \"react\";\n\n// Nothing to do with this file.\n// The input 'detail' of Cell is one single cell which have properties of x, y, value, flagged and revealed.\nexport default function Cell({ rowIdx, colIdx, detail, updateFlag, revealCell }) {\n    const cellStyle = {\n        background: detail.revealed ?\n            detail.value === '💣' ? '#880000' : mineCheckPattern(detail.x, detail.y) : checkPattern(detail.x, detail.y),\n        color: numColorCode(detail.value),\n        border: detail.revealed ? \"2px inset darkgrey\" : \"2px outset white\",\n    }\n    const ID = rowIdx.toString() + '-' + colIdx.toString()\n    return (\n        <div\n            id={ID}\n            className='cell'\n            style={cellStyle}\n            onClick={() => revealCell(detail.x, detail.y)}\n            onContextMenu={(e) => updateFlag(e, detail.x, detail.y)}\n        >\n            {!detail.revealed && detail.flagged ? \"🚩\" : detail.revealed && detail.value !== 0 ? (detail.value === '💣' ? '💣' : detail.value) : ''}\n        </div>\n\n    );\n}\n\n\n\nconst mineCheckPattern = (x, y) => {\n    if (x % 2 === 0 && y % 2 === 0) return '#c0c0c0';\n    else if (x % 2 === 0 && y % 2 !== 0) return '#bbbbbb';\n    else if (x % 2 !== 0 && y % 2 === 0) return '#bbbbbb';\n    else return '#c0c0c0';\n}\n\nconst checkPattern = (x, y) => {\n    if (x % 2 === 0 && y % 2 === 0) return '#dddddd';\n    else if (x % 2 === 0 && y % 2 !== 0) return '#d0d0d0';\n    else if (x % 2 !== 0 && y % 2 === 0) return '#d0d0d0';\n    else return '#dddddd';\n}\n\nconst numColorCode = (num) => {\n    if (num === 1) return '#0307de';\n    else if (num === 2) return '#15760f';\n    else if (num === 3) return '#dc1410';\n    else if (num === 4) return '#02087e';\n    else if (num === 5) return '#630501';\n    else if (num === 6) return '#ec596c';\n    else if (num === 7) return '#edf451';\n    else if (num === 8) return '#56dddc';\n}\n","/****************************************************************************\n  FileName      [ Modal.js ]\n  PackageName   [ src/components ]\n  Author        [ Cheng-Hua Lu ]\n  Synopsis      [ This file generates the Modal component. ]\n  Copyright     [ 2022 10 ]\n****************************************************************************/\n\nimport './css/Modal.css'\nimport React, { useEffect, useState } from \"react\";\n\nexport default function Modal({ restartGame, backToHome, win }) {\n    const [render, setRender] = useState(false);\n    useEffect(() => {\n        setTimeout(() => {\n            setRender(true);\n        }, 1000);\n    }, [win]);\n\n    return (\n        // Advanced TODO: Implement the structure of Modal\n        // Useful Hint: style = {{opacity: 1 or 0 }}\n        <div className='modal' style={render?{opacity: 1}:{opacity: 0}}>\n            <div className='modalWrapper'></div>\n            <div className='modalContent'>\n                <div className='modalResult'>{win?\"WIN\":\"Game Over\"}</div>\n                <div className='modalBtnWrapper'>\n                    <div className='modalBtn' onClick={restartGame}>{win?\"NewGame\":\"Try Again\"}</div>\n                    <div className='modalBtn' onClick={backToHome}>Back to Home</div>\n                </div>\n            </div>\n            <div className='modalWrapper'></div>\n        </div>\n        \n    );\n}","/* eslint-disable no-lone-blocks */\n/****************************************************************************\n  FileName      [ Dashnoard.js ]\n  PackageName   [ src/components ]\n  Author        [ Cheng-Hua Lu ]\n  Synopsis      [ This file generates the Dashboard. ]\n  Copyright     [ 2022 10 ]\n****************************************************************************/\n\nimport React, { useEffect, useState } from 'react';\nimport \"./css/Dashboard.css\"\nlet timeIntervalId;\n\nexport default function Dashboard({ remainFlagNum, gameOver }) {\n  let [time, setTime] = useState(0);\n  let [sTime, setSTime] = useState(0);\n\n  // Advanced TODO: Implement the timer on the Dashboard\n  {/* Useful Hint: Try to understand the difference between time and sTime. */ }\n\n  useEffect(() => {\n      if(gameOver===false) setTime(0);\n      setSTime(time);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [gameOver]);\n\n  useEffect(() => {\n    let interval = null;\n    interval = setInterval(() => {\n      setTime(time+1);\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    }\n  }, [time]);\n\n\n  return (\n    <div className=\"dashBoard\" >\n      <div id='dashBoard_col1' >\n        <div className='dashBoard_col'>\n          <p className='icon'>🚩</p>\n          {remainFlagNum}\n        </div>\n      </div>\n      <div id='dashBoard_col2' >\n        <div className='dashBoard_col'>\n          <p className='icon'>⏰</p>\n          {gameOver ? sTime : time}\n        </div>\n      </div>\n    </div>\n  );\n}\n","/****************************************************************************\n  FileName      [ reveal.js ]\n  PackageName   [ src/util ]\n  Author        [ Cheng-Hua Lu ]\n  Synopsis      [ This file states the reaction when left clicking a cell. ]\n  Copyright     [ 2022 10 ]\n****************************************************************************/\n\nconst dx = [-1, -1, -1, 0, 0, 1, 1, 1];\nconst dy = [-1, 0, 1, -1, 1, -1, 0, 1];\n\nexport const revealed = (board, x, y, newNonMinesCount) => {\n\tlet boardSize = board[0].length;\n    var visited = Array(boardSize).fill().map(() => Array(boardSize).fill(false));\n\n    // Advanced TODO: reveal cells in a more intellectual way.\n    // Useful Hint: If the cell is already revealed, do nothing.\n    //              If the value of the cell is not 0, only show the cell value.\n    //              If the value of the cell is 0, we should try to find the value of adjacent cells until the value we found is not 0.\n    //              The input variables 'newNonMinesCount' and 'board' may be changed in this function.\n    if(board[x][y].value !== 0){\n        board[x][y].revealed = true;\n        newNonMinesCount--;\n    }\n\telse{\n\t\tlet s = [];\n\t\ts.push({x:x,y:y});\n\t\twhile(s.length !== 0){\n\t\t\tvar cur = s.shift();\n\t\t\tif(visited[cur.x][cur.y] === true){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvisited[cur.x][cur.y] = true;\n\t\t\tif(board[cur.x][cur.y].value !== '💣' && !board[cur.x][cur.y].flagged){\n\t\t\t\tboard[cur.x][cur.y].revealed = true;\n        \t\tnewNonMinesCount--;\n\t\t\t}\n\t\t\tif(board[cur.x][cur.y].value === 0){\n\t\t\t\t\n\t\t\t\tfor(var i=0; i<8; i++){\n\t\t\t\t\tif(cur.x+dx[i]>=0 && cur.x+dx[i]<boardSize && cur.y+dy[i]>=0 && cur.y+dy[i]<boardSize){\n\t\t\t\t\t\tif(visited[cur.x+dx[i]][cur.y+dy[i]] === false){\n\t\t\t\t\t\t\ts.push({x:cur.x+dx[i], y:cur.y+dy[i]});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n    return { board, newNonMinesCount };\n};\n","/****************************************************************************\n  FileName      [ randomFixSeed.js ]\n  PackageName   [ src/util ]\n  Author        [ Cheng-Hua Lu ]\n  Synopsis      [ This file makes random numbers. ]\n  Copyright     [ 2022 10 ]\n****************************************************************************/\n\nvar seedrandom = require('seedrandom');\nconst randomFixSeed = seedrandom('Over my dead body');\n\nexport default function randomNum(min = 0, max) {\n  return Math.floor(randomFixSeed() * (max - min + 1) + min);\n}\n","/* eslint-disable import/no-anonymous-default-export */\n/****************************************************************************\n  FileName      [ createBoard.js ]\n  PackageName   [ src/util ]\n  Author        [ Cheng-Hua Lu ]\n  Synopsis      [ This file generates the pattern of mines and the board. ]\n  Copyright     [ 2022 10 ]\n****************************************************************************/\n\nimport randomNum from \"./randomFixSeed\";\n\nexport default (boardSize, mineNum) => {\n    let board = [];\n    let mineLocations = [];\n\n    // Print Board function (For testing)\n    const printBoard = () => {\n        console.log(\"Current Board\")\n        for (let x = 0; x < boardSize; x++) {\n            console.log(board[x].map((x) => {\n                return (x.value !== '💣' ? x.value.toString() + \" \" : x.value)\n            }))\n        }\n    }\n\n    // Create a blank board\n    for (let x = 0; x < boardSize; x++) {\n        let subCol = [];\n        for (let y = 0; y < boardSize; y++) {\n            subCol.push({\n                value: 0,                   // To store the number of mines around the cell.\n                revealed: false,            // To store if the cell is revealed.\n                x: x,                       // To store the x coordinate (the column index) of the cell.\n                y: y,                       // To store the y coordinate (the row index) of the cell.\n                flagged: false,             // To store if the cell is flagged.\n            });\n        }\n        board.push(subCol);\n    }\n\n    // Random bombs locations\n    let mineCount = 0;\n    while (mineCount < mineNum) {\n        let x = randomNum(0, boardSize - 1);\n        let y = randomNum(0, boardSize - 1);\n\n        if (board[x][y].value === 0) {            // Check this location has not been located a mine.\n            board[x][y].value = '💣';           // Change the value of the cell to '💣'\n            mineLocations.push([x, y]);\n            mineCount++;\n        }\n    }\n\n    \n    \n\n    for (let r = 0; r < boardSize; r++) {\n        for (let c = 0; c < boardSize; c++) {\n            if (board[r][c].value === '💣') continue;\n            // Top\n            if (r > 0 && board[r - 1][c].value === '💣') board[r][c].value++;\n            // Top Right\n            if (r > 0 && c < boardSize - 1 && board[r - 1][c + 1].value === '💣') board[r][c].value++;\n            // Right\n            if (c < boardSize - 1 && board[r][c + 1].value === '💣') board[r][c].value++;\n            // Bottom Right\n            if (r < boardSize - 1 && c < boardSize - 1 && board[r + 1][c + 1].value === '💣') board[r][c].value++;\n            // Bottom\n            if (r < boardSize - 1 && board[r + 1][c].value === '💣') board[r][c].value++;\n            // Bottom Left\n            if (r < boardSize - 1 && c > 0 && board[r + 1][c - 1].value === '💣') board[r][c].value++;\n            // Left\n            if (c > 0 && board[r][c - 1].value === '💣') board[r][c].value++;\n            // Top Left\n            if (r > 0 && c > 0 && board[r - 1][c - 1].value === '💣') board[r][c].value++;\n\n        }\n    }\n\n    //  Testing: printBoard()\n\n    printBoard();\n\n    return { board, mineLocations };\n};","/****************************************************************************\n  FileName      [ Board.js ]\n  PackageName   [ src/components ]\n  Author        [ Cheng-Hua Lu ]\n  Synopsis      [ This file generates the Board. ]\n  Copyright     [ 2022 10 ]\n****************************************************************************/\n\nimport './css/Board.css'\nimport Cell from './Cell';\nimport Modal from './Modal';\nimport Dashboard from './Dashboard';\nimport { revealed } from '../util/reveal';\nimport createBoard from '../util/createBoard';\nimport React, { useEffect, useState } from 'react';\n\n\nconst Board = ({ boardSize, mineNum, backToHome }) => {\n    const [board, setBoard] = useState([]);                     // An 2-dimentional array. It is used to store the board.\n    const [nonMineCount, setNonMineCount] = useState(0);        // An integer variable to store the number of cells whose value are not '💣'.\n    const [mineLocations, setMineLocations] = useState([]);     // An array to store all the coordinate of '💣'.\n    const [gameOver, setGameOver] = useState(false);            // A boolean variable. If true, means you lose the game (Game over).\n    const [remainFlagNum, setRemainFlagNum] = useState(0);      // An integer variable to store the number of remain flags.\n    const [win, setWin] = useState(false);                      // A boolean variable. If true, means that you win the game.\n\n    useEffect(() => {\n        // Calling the function\n        freshBoard();\n    }, []);\n\n    // Creating a board\n    const freshBoard = () => {\n        const newBoard = createBoard(boardSize, mineNum);\n        // Basic TODO: Use `newBoard` created above to set the `Board`.\n        // Hint: Read the definition of those Hook useState functions and make good use of them.\n\n        setBoard(newBoard.board);\n        setNonMineCount(boardSize*boardSize - newBoard.mineLocations.length);\n        setMineLocations(newBoard.mineLocations);\n        setRemainFlagNum(newBoard.mineLocations.length);\n\n    }\n\n    const restartGame = () => {\n        freshBoard();\n        setGameOver(false);\n        setWin(false);\n    }\n\n    // On Right Click / Flag Cell\n    const updateFlag = (e, x, y) => {\n        // To not have a dropdown on right click\n        e.preventDefault();\n        if(remainFlagNum === 0) return;\n        // Deep copy of a state\n        let newBoard = JSON.parse(JSON.stringify(board));\n        let newFlagNum = remainFlagNum;\n\n        // Basic TODO: Right Click to add a flag on board[x][y]\n        // Remember to check if board[x][y] is able to add a flag (remainFlagNum, board[x][y].revealed)\n        // Update board and remainFlagNum in the end\n\n        if(!newBoard[x][y].revealed && !newBoard[x][y].flagged){\n            newBoard[x][y].flagged = true;\n            newFlagNum -= 1;\n        }\n        else if(newBoard[x][y].flagged){\n            newBoard[x][y].flagged = false;\n            newFlagNum += 1;\n        }\n\n        setBoard(newBoard);\n        setRemainFlagNum(newFlagNum);\n    };\n\n    const revealCell = (x, y) => {\n        if (board[x][y].revealed || gameOver || board[x][y].flagged) return;\n        let newBoard = JSON.parse(JSON.stringify(board));\n        // Basic TODO: Complete the conditions of revealCell (Refer to reveal.js)\n        // Hint: If `Hit the mine`, check ...?\n        //       Else if `Reveal the number cell`, check ...?\n        // Reminder: Also remember to handle the condition that after you reveal this cell then you win the game.\n        \n        if(newBoard[x][y].value === '💣'){\n            mineLocations.forEach(coord => {\n                newBoard[coord[0]][coord[1]].revealed = true;\n            });\n            setBoard(newBoard);\n            setGameOver(true);\n        }\n        else{\n            var newNonMinesCount = nonMineCount;\n            let ret = revealed(newBoard, x, y, newNonMinesCount);\n            setBoard(ret.board);\n            setNonMineCount(ret.newNonMinesCount);\n            if(ret.newNonMinesCount === 0){\n                setWin(true);\n                setGameOver(true);\n            }\n        }\n\n    };\n\n    return (\n        <div className='boardPage' >\n            <div className='boardWrapper' >\n                {/* <h1>This is the board Page!</h1>  This line of code is just for testing. Please delete it if you finish this function. */}\n\n                {/* Advanced TODO: Implement Modal based on the state of `gameOver` */}\n\n                {(gameOver || win) && <Modal restartGame={restartGame} backToHome={backToHome} win={win}/>}\n\n                {/* Basic TODO: Implement Board \n                Useful Hint: The board is composed of BOARDSIZE*BOARDSIZE of Cell (2-dimention). So, nested 'map' is needed to implement the board.\n                Reminder: Remember to use the component <Cell> and <Dashboard>. See Cell.js and Dashboard.js for detailed information. */}\n\n                <div className='boardContainer'>\n                    <Dashboard remainFlagNum={remainFlagNum} gameOver={gameOver} />\n                    {\n                        board.map((row, index) => {\n                            return (\n                                <div className={`row${index}`} style={{display: `flex`}}>\n                                    {\n                                        row.map((col, index) => {\n                                            return (\n                                                <Cell rowIdx={col.x} colIdx={col.y} detail={col} updateFlag={updateFlag} revealCell={revealCell}/>\n                                            )\n                                        })\n                                    }\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n                \n            </div>\n        </div>\n    );\n}\n\nexport default Board","/****************************************************************************\n  FileName      [ HomePage.js ]\n  PackageName   [ src/components ]\n  Author        [ Cheng-Hua Lu ]\n  Synopsis      [ This file generates the Home page.  ]\n  Copyright     [ 2022 10 ]\n****************************************************************************/\n\nimport './css/HomePage.css';\nimport React, { useState, useEffect} from 'react';\n\nconst HomePage = ({ startGameOnClick, mineNumOnChange, boardSizeOnChange, mineNum, boardSize /* -- something more... -- */ }) => {\n  const [showPanel, setShowPanel] = useState(false);      // A boolean variable. If true, the controlPanel will show.\n  const [error, setError] = useState(false);              // A boolean variable. If true, means that the numbers of mines and the board size are invalid to build a game.\n\n  // eslint-disable-next-line no-lone-blocks\n  {/* Advanced TODO: Implementation of Difficult Adjustment\n                     Some functions may be added here! */}\n\n    useEffect(() => {\n      if(mineNum > boardSize*boardSize){\n        setError(true);\n      }\n      else{\n        setError(false);\n      }\n    }, [mineNum, boardSize]);\n\n  return (\n    <div className='HomeWrapper'>\n      <p className='title'>MineSweeper</p>\n      {/* Basic TODO:  Implement start button */}\n      <button className='btn' onClick={!error?startGameOnClick:null}>Start Game</button>\n      {/* Advanced TODO: Implementation of Difficult Adjustment\n                Useful Hint: <input type = 'range' min = '...' max = '...' defaultValue = '...'> \n                Useful Hint: Error color: '#880000', default text color: '#0f0f4b', invisible color: 'transparent' \n                Reminder: The defaultValue of 'mineNum' is 10, and the defaultValue of 'boardSize' is 8. */}\n      <div className='controlContainer'>\n        <button className='btn' onClick={() => setShowPanel(!showPanel)}>Difficulty Adjustment</button>\n        {\n          showPanel && \n          <div className='controlWrapper'>\n            {error && <div className='error'>ERROR: Mines number and board size are invalid!</div>}\n            <div className='controlPanel'>\n\n              <div className='controlCol'>\n                <p className='controlTitle'>Mines Number</p>\n                <input type='range' onChange={(e) => mineNumOnChange(e.target.value)} step = '1' min = '1' max = '100' defaultValue = '10'/>\n                <p className='controlNum' style={error?{color: '#880000'}:{color: '#0f0f4b'}}>{mineNum}</ p>\n              </div>\n\n              <div className='controlCol'>\n                <p className='controlTitle'>Board Size(nxn)</p>\n                <input type='range' onChange={(e) => boardSizeOnChange(e.target.value)} step = '1' min = '2' max = '10' defaultValue = '8'/>\n                <p className='controlNum' style={error?{color: '#880000'}:{color: '#0f0f4b'}}>{boardSize}</ p>\n              </div>\n\n            </div>\n          </div>\n        }\n      </div>\n\n    </div>\n  );\n\n}\nexport default HomePage;   ","/****************************************************************************\n  FileName      [ MineSweeper.js ]\n  PackageName   [ src/containers ]\n  Author        [ Cheng-Hua Lu ]\n  Synopsis      [ The control and main page of MineSweeper. ]\n  Copyright     [ 2022 10 ]\n****************************************************************************/\n\nimport './MineSweeper.css';\nimport Board from '../components/Board'\nimport React, { useState } from 'react';\nimport HomePage from '../components/HomePage'\n\nconst MineSweeper = () => {\n    const [startGame, setStartGame] = useState(false);      // A boolean variable. If true, show `Board`, else show `HomePage`.\n    const [mineNum, setMineNum] = useState(10);             // A integer variable to store the number of mines in the game. The default value is 10.\n    const [boardSize, setBoardSize] = useState(8);          // A integer variable to store the board size in the game. The default value is 8.\n\n    // Basic TODO: Change `startGame` from false to true when this function is called\n    const startGameOnClick = () => {\n        setStartGame(true);\n    }\n\n    // Advanced TODO: Change `mineNum` to the number you send by this function\n    const mineNumOnChange = (value) => {\n        setMineNum(value);\n    }\n\n    // Advanced TODO: Change `boardSize` to the number you send by this function\n    const boardSizeOnChange = (value) => {\n        setBoardSize(value);\n    }\n\n    // Advanced TODO: Change `startGame` from true to false when this function is called\n    const backToHomeOnClick = () => {\n        setStartGame(false);\n    }\n\n    return (\n        <div className='mineSweeper'>\n            {/* Basic TODO: `HomePage` and `Board` will switch based on the mode of `startGame`. If `startGame` is true, show `Board`; else show `HomePage` */}\n            {/* Advanced TODO: pass all parameters into `Board` and `HomePage`*/}\n            {\n                startGame \n                ? <Board boardSize={boardSize} mineNum={mineNum} backToHome={backToHomeOnClick}/> \n                : <HomePage startGameOnClick={startGameOnClick} mineNumOnChange={mineNumOnChange} boardSizeOnChange={boardSizeOnChange} mineNum={mineNum} boardSize={boardSize}/>\n            }\n            \n        </div>\n    );\n}\nexport default MineSweeper;","/****************************************************************************\n  FileName      [ App.js ]\n  PackageName   [ src ]\n  Author        [ Cheng-Hua Lu ]\n  Synopsis      [  ]\n  Copyright     [ 2022 10 ]\n****************************************************************************/\n\nimport React from 'react';\nimport './App.css';\nimport MineSweeper from './containers/MineSweeper';\n\nconst App = () => {\n  return (\n    <div className='App'>\n      <MineSweeper />\n    </div>\n  );\n}\n\nexport default App;\n","/****************************************************************************\n  FileName      [ index.js ]\n  PackageName   [ src ]\n  Author        [ Cheng-Hua Lu ]\n  Synopsis      [  ]\n  Copyright     [ 2022 10 ]\n****************************************************************************/\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}